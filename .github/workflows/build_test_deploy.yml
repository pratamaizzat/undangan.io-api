on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

name: Build, test, and deploy

env:
  PNPM_VERSION: 7.2.1

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest
    outputs:
      docsChange: ${{ steps.docs-change.outputs.DOCS_CHANGE }}
    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        if: ${{ steps.docs-change.outputs.docsChange != 'docs only change' }}
        with:
          node-version: 16
          check-latest: true

      - uses: actions/checkout@v3
        with:
          fetch-depth: 25

      - run: npm i -g pnpm@${PNPM_VERSION}

      - id: get-store-path
        run: echo ::set-output name=STORE_PATH::$(pnpm store path)

      - uses: actions/cache@v3
        id: cache-pnpm-store
        with:
          path: ${{ steps.get-store-path.outputs.STORE_PATH }}
          key: pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-
            pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}

      - run: pnpm install
      - run: pnpm run generate
      - run: pnpm run prebuild
      - run: pnpm run build

      - name: Check docs only change
        run: echo ::set-output name=DOCS_CHANGE::$(node scripts/skip-docs-change.js echo 'not-docs-only-change')
        id: docs-change

      - run: echo ${{steps.docs-change.outputs.DOCS_CHANGE}}

      - uses: actions/cache@v3
        id: cache-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
      - run: npm i -g pnpm@${PNPM_VERSION}
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}
      - run: pnpm lint
